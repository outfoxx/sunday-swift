{"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sunday\/eventsource\/init(queue:eventtimeoutinterval:eventtimeoutcheckinterval:dataeventstreamfactory:)","title":"init(queue: DispatchQueue, eventTimeoutInterval: DispatchTimeInterval?, eventTimeoutCheckInterval: DispatchTimeInterval, dataEventStreamFactory: (HTTP.Headers) async throws -> NetworkSession.DataEventStream)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sunday\/eventsource\/onerror","title":"var onError: ((Error?) -> Void)?","type":"property"},{"path":"\/documentation\/sunday\/eventsource\/onmessage","title":"var onMessage: ((String?, String?, String?) -> Void)?","type":"property"},{"path":"\/documentation\/sunday\/eventsource\/onopen","title":"var onOpen: (() -> Void)?","type":"property"},{"path":"\/documentation\/sunday\/eventsource\/readystate","title":"var readyState: EventSource.State","type":"property"},{"path":"\/documentation\/sunday\/eventsource\/retrytime","title":"var retryTime: DispatchTimeInterval","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sunday\/eventsource\/addeventlistener(for:_:)","title":"func addEventListener(for: String, (String?, String?, String?) -> Void) -> UUID","type":"method"},{"path":"\/documentation\/sunday\/eventsource\/close()","title":"func close()","type":"method"},{"path":"\/documentation\/sunday\/eventsource\/connect()","title":"func connect()","type":"method"},{"path":"\/documentation\/sunday\/eventsource\/events()","title":"func events() -> [String]","type":"method"},{"path":"\/documentation\/sunday\/eventsource\/removeeventlistener(handlerid:for:)","title":"func removeEventListener(handlerId: UUID, for: String)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/sunday\/eventsource\/eventtimeoutcheckintervaldefault","title":"static var eventTimeoutCheckIntervalDefault: DispatchTimeInterval","type":"property"},{"path":"\/documentation\/sunday\/eventsource\/eventtimeoutintervaldefault","title":"static var eventTimeoutIntervalDefault: DispatchTimeInterval?","type":"property"},{"path":"\/documentation\/sunday\/eventsource\/retrytimedefault","title":"static var retryTimeDefault: DispatchTimeInterval","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/sunday\/eventsource\/error\/eventtimeout","title":"case eventTimeout","type":"case"},{"path":"\/documentation\/sunday\/eventsource\/error\/invalidstate","title":"case invalidState","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sunday\/eventsource\/error\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sunday\/eventsource\/error\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sunday\/eventsource\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/sunday\/eventsource\/error\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/sunday\/eventsource\/error","title":"EventSource.Error","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/sunday\/eventsource\/state\/closed","title":"case closed","type":"case"},{"path":"\/documentation\/sunday\/eventsource\/state\/connecting","title":"case connecting","type":"case"},{"path":"\/documentation\/sunday\/eventsource\/state\/open","title":"case open","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sunday\/eventsource\/state\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sunday\/eventsource\/state\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sunday\/eventsource\/state\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sunday\/eventsource\/state\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sunday\/eventsource\/state\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/sunday\/eventsource\/state\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/sunday\/eventsource\/state","title":"EventSource.State","type":"enum"}],"path":"\/documentation\/sunday\/eventsource","title":"EventSource","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sunday\/headertokenauthorizingadapter\/init(tokenheadertype:token:header:)","title":"init(tokenHeaderType: String, token: String, header: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sunday\/headertokenauthorizingadapter\/adapt(requestfactory:urlrequest:)","title":"func adapt(requestFactory: NetworkRequestFactory, urlRequest: URLRequest) async throws -> URLRequest","type":"method"}],"path":"\/documentation\/sunday\/headertokenauthorizingadapter","title":"HeaderTokenAuthorizingAdapter","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sunday\/hostmatchingadapter\/init(hostname:adapter:)","title":"convenience init(hostname: String, adapter: NetworkRequestAdapter)","type":"init"},{"path":"\/documentation\/sunday\/hostmatchingadapter\/init(hostnames:adapter:)","title":"init(hostnames: Set<String>, adapter: NetworkRequestAdapter)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sunday\/hostmatchingadapter\/adapt(requestfactory:urlrequest:)","title":"func adapt(requestFactory: NetworkRequestFactory, urlRequest: URLRequest) async throws -> URLRequest","type":"method"}],"path":"\/documentation\/sunday\/hostmatchingadapter","title":"HostMatchingAdapter","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sunday\/networkrequestfactory\/init(baseurl:adapter:servertrustpolicymanager:sessionconfiguration:requestqueue:mediatypeencoders:mediatypedecoders:)","title":"convenience init(baseURL: URI.Template, adapter: NetworkRequestAdapter?, serverTrustPolicyManager: ServerTrustPolicyManager?, sessionConfiguration: URLSessionConfiguration, requestQueue: DispatchQueue, mediaTypeEncoders: MediaTypeEncoders, mediaTypeDecoders: MediaTypeDecoders)","type":"init"},{"path":"\/documentation\/sunday\/networkrequestfactory\/init(baseurl:session:eventsession:adapter:requestqueue:mediatypeencoders:mediatypedecoders:pathencoders:)","title":"init(baseURL: URI.Template, session: NetworkSession, eventSession: NetworkSession?, adapter: NetworkRequestAdapter?, requestQueue: DispatchQueue, mediaTypeEncoders: MediaTypeEncoders, mediaTypeDecoders: MediaTypeDecoders, pathEncoders: PathEncoders)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sunday\/networkrequestfactory\/adapter","title":"let adapter: NetworkRequestAdapter?","type":"property"},{"path":"\/documentation\/sunday\/networkrequestfactory\/baseurl","title":"let baseURL: URI.Template","type":"property"},{"path":"\/documentation\/sunday\/networkrequestfactory\/eventsession","title":"let eventSession: NetworkSession","type":"property"},{"path":"\/documentation\/sunday\/networkrequestfactory\/mediatypedecoders","title":"let mediaTypeDecoders: MediaTypeDecoders","type":"property"},{"path":"\/documentation\/sunday\/networkrequestfactory\/mediatypeencoders","title":"let mediaTypeEncoders: MediaTypeEncoders","type":"property"},{"path":"\/documentation\/sunday\/networkrequestfactory\/pathencoders","title":"let pathEncoders: PathEncoders","type":"property"},{"path":"\/documentation\/sunday\/networkrequestfactory\/requestqueue","title":"let requestQueue: DispatchQueue","type":"property"},{"path":"\/documentation\/sunday\/networkrequestfactory\/session","title":"let session: NetworkSession","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sunday\/networkrequestfactory\/close(canceloutstandingrequests:)","title":"func close(cancelOutstandingRequests: Bool)","type":"method"},{"path":"\/documentation\/sunday\/networkrequestfactory\/eventsource(from:)","title":"func eventSource(from: () async throws -> URLRequest) -> EventSource","type":"method"},{"path":"\/documentation\/sunday\/networkrequestfactory\/eventsource(method:pathtemplate:pathparameters:queryparameters:body:contenttypes:accepttypes:headers:)","title":"func eventSource<B>(method: HTTP.Method, pathTemplate: String, pathParameters: Parameters?, queryParameters: Parameters?, body: B?, contentTypes: [MediaType]?, acceptTypes: [MediaType]?, headers: Parameters?) -> EventSource","type":"method"},{"path":"\/documentation\/sunday\/networkrequestfactory\/eventstream(decoder:from:)","title":"func eventStream<D>(decoder: (TextMediaTypeDecoder, String?, String?, String, Logger) throws -> D?, from: () async throws -> URLRequest) -> AsyncStream<D>","type":"method"},{"path":"\/documentation\/sunday\/networkrequestfactory\/eventstream(method:pathtemplate:pathparameters:queryparameters:body:contenttypes:accepttypes:headers:decoder:)","title":"func eventStream<B, D>(method: HTTP.Method, pathTemplate: String, pathParameters: Parameters?, queryParameters: Parameters?, body: B?, contentTypes: [MediaType]?, acceptTypes: [MediaType]?, headers: Parameters?, decoder: (TextMediaTypeDecoder, String?, String?, String, Logger) throws -> D?) -> AsyncStream<D>","type":"method"},{"path":"\/documentation\/sunday\/networkrequestfactory\/parse(dataresponse:)","title":"func parse<D>(dataResponse: (Data?, HTTPURLResponse)) throws -> D","type":"method"},{"path":"\/documentation\/sunday\/networkrequestfactory\/parse(error:)","title":"func parse(error: Error) -> Error","type":"method"},{"path":"\/documentation\/sunday\/networkrequestfactory\/registerproblem(type:problemtype:)-2pshn","title":"func registerProblem(type: String, problemType: Problem.Type)","type":"method"},{"path":"\/documentation\/sunday\/networkrequestfactory\/registerproblem(type:problemtype:)-7jglo","title":"func registerProblem(type: URL, problemType: Problem.Type)","type":"method"},{"path":"\/documentation\/sunday\/networkrequestfactory\/request(method:pathtemplate:pathparameters:queryparameters:body:contenttypes:accepttypes:headers:)","title":"func request<B>(method: HTTP.Method, pathTemplate: String, pathParameters: Parameters?, queryParameters: Parameters?, body: B?, contentTypes: [MediaType]?, acceptTypes: [MediaType]?, headers: Parameters?) async throws -> URLRequest","type":"method"},{"path":"\/documentation\/sunday\/networkrequestfactory\/response(method:pathtemplate:pathparameters:queryparameters:body:contenttypes:accepttypes:headers:)","title":"func response<B>(method: HTTP.Method, pathTemplate: String, pathParameters: Parameters?, queryParameters: Parameters?, body: B?, contentTypes: [MediaType]?, acceptTypes: [MediaType]?, headers: Parameters?) async throws -> (Data?, HTTPURLResponse)","type":"method"},{"path":"\/documentation\/sunday\/networkrequestfactory\/response(request:)","title":"func response(request: URLRequest) async throws -> (Data?, HTTPURLResponse)","type":"method"},{"path":"\/documentation\/sunday\/networkrequestfactory\/result(method:path:body:contenttype:accepttypes:)-3x9al","title":"func result<B>(method: HTTP.Method, path: String, body: B?, contentType: MediaType?, acceptTypes: [MediaType]?) async throws","type":"method"},{"path":"\/documentation\/sunday\/networkrequestfactory\/result(method:path:body:contenttype:accepttypes:)-6euuq","title":"func result<B, D>(method: HTTP.Method, path: String, body: B?, contentType: MediaType?, acceptTypes: [MediaType]?) async throws -> D","type":"method"},{"path":"\/documentation\/sunday\/networkrequestfactory\/result(method:pathtemplate:pathparameters:queryparameters:body:contenttypes:accepttypes:headers:)-15ltr","title":"func result<B>(method: HTTP.Method, pathTemplate: String, pathParameters: Parameters?, queryParameters: Parameters?, body: B?, contentTypes: [MediaType]?, acceptTypes: [MediaType]?, headers: Parameters?) async throws","type":"method"},{"path":"\/documentation\/sunday\/networkrequestfactory\/result(method:pathtemplate:pathparameters:queryparameters:body:contenttypes:accepttypes:headers:)-52imt","title":"func result<B, D>(method: HTTP.Method, pathTemplate: String, pathParameters: Parameters?, queryParameters: Parameters?, body: B?, contentTypes: [MediaType]?, acceptTypes: [MediaType]?, headers: Parameters?) async throws -> D","type":"method"},{"path":"\/documentation\/sunday\/networkrequestfactory\/result(request:)-2rccv","title":"func result(request: URLRequest) async throws","type":"method"},{"path":"\/documentation\/sunday\/networkrequestfactory\/result(request:)-5urrp","title":"func result<D>(request: URLRequest) async throws -> D","type":"method"},{"path":"\/documentation\/sunday\/networkrequestfactory\/resultresponse(method:pathtemplate:pathparameters:queryparameters:body:contenttypes:accepttypes:headers:)-8z8vn","title":"func resultResponse<B, D>(method: HTTP.Method, pathTemplate: String, pathParameters: Parameters?, queryParameters: Parameters?, body: B?, contentTypes: [MediaType]?, acceptTypes: [MediaType]?, headers: Parameters?) async throws -> ResultResponse<D>","type":"method"},{"path":"\/documentation\/sunday\/networkrequestfactory\/resultresponse(method:pathtemplate:pathparameters:queryparameters:body:contenttypes:accepttypes:headers:)-w3g6","title":"func resultResponse<B>(method: HTTP.Method, pathTemplate: String, pathParameters: Parameters?, queryParameters: Parameters?, body: B?, contentTypes: [MediaType]?, acceptTypes: [MediaType]?, headers: Parameters?) async throws -> ResultResponse<Void>","type":"method"}],"path":"\/documentation\/sunday\/networkrequestfactory","title":"NetworkRequestFactory","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sunday\/networksession\/init(configuration:servertrustpolicymanager:delegate:)","title":"init(configuration: URLSessionConfiguration, serverTrustPolicyManager: ServerTrustPolicyManager?, delegate: URLSessionDelegate?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sunday\/networksession\/isclosed","title":"var isClosed: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sunday\/networksession\/close(canceloutstandingtasks:)","title":"func close(cancelOutstandingTasks: Bool)","type":"method"},{"path":"\/documentation\/sunday\/networksession\/copy(configuration:servertrustpolicymanager:delegate:)","title":"func copy(configuration: URLSessionConfiguration?, serverTrustPolicyManager: ServerTrustPolicyManager?, delegate: URLSessionDelegate?) -> NetworkSession","type":"method"},{"path":"\/documentation\/sunday\/networksession\/data(for:)","title":"func data(for: URLRequest) async throws -> (Data?, URLResponse)","type":"method"},{"path":"\/documentation\/sunday\/networksession\/dataeventstream(for:)","title":"func dataEventStream(for: URLRequest) throws -> NetworkSession.DataEventStream","type":"method"},{"path":"\/documentation\/sunday\/networksession\/validateddata(for:)","title":"func validatedData(for: URLRequest) async throws -> (Data?, HTTPURLResponse)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/sunday\/networksession\/dataeventstream","title":"NetworkSession.DataEventStream","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/sunday\/networksession\/dataevent\/connect(_:)","title":"case connect(HTTPURLResponse)","type":"case"},{"path":"\/documentation\/sunday\/networksession\/dataevent\/data(_:)","title":"case data(Data)","type":"case"}],"path":"\/documentation\/sunday\/networksession\/dataevent","title":"NetworkSession.DataEvent","type":"enum"}],"path":"\/documentation\/sunday\/networksession","title":"NetworkSession","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sunday\/problem\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/sunday\/problem\/init(statuscode:)-1j2ze","title":"convenience init(statusCode: HTTP.StatusCode)","type":"init"},{"path":"\/documentation\/sunday\/problem\/init(statuscode:)-9gtlp","title":"convenience init(statusCode: Int)","type":"init"},{"path":"\/documentation\/sunday\/problem\/init(statuscode:data:)-3y6p8","title":"convenience init(statusCode: HTTP.StatusCode, data: [String : AnyValue])","type":"init"},{"path":"\/documentation\/sunday\/problem\/init(statuscode:data:)-6mqoj","title":"convenience init(statusCode: Int, data: [String : AnyValue])","type":"init"},{"path":"\/documentation\/sunday\/problem\/init(type:title:status:detail:instance:parameters:)","title":"init(type: URL, title: String, status: Int, detail: String?, instance: URL?, parameters: [String : AnyValue]?)","type":"init"},{"path":"\/documentation\/sunday\/problem\/init(type:title:statuscode:detail:instance:parameters:)","title":"init(type: URL, title: String, statusCode: HTTP.StatusCode, detail: String?, instance: URL?, parameters: [String : AnyValue]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sunday\/problem\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/sunday\/problem\/detail","title":"let detail: String?","type":"property"},{"path":"\/documentation\/sunday\/problem\/instance","title":"let instance: URL?","type":"property"},{"path":"\/documentation\/sunday\/problem\/parameters","title":"let parameters: [String : AnyValue]?","type":"property"},{"path":"\/documentation\/sunday\/problem\/status","title":"let status: Int","type":"property"},{"path":"\/documentation\/sunday\/problem\/statuscode","title":"var statusCode: HTTP.StatusCode?","type":"property"},{"path":"\/documentation\/sunday\/problem\/title","title":"let title: String","type":"property"},{"path":"\/documentation\/sunday\/problem\/type","title":"let type: URL","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sunday\/problem\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/sunday\/problem\/statustitle(statuscode:)","title":"static func statusTitle(statusCode: Int) -> String","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sunday\/problem\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/sunday\/problem\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/sunday\/problem","title":"Problem","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sunday\/refreshingheadertokenauthorizingadapter\/init(tokenheadertype:header:refresh:)","title":"init(tokenHeaderType: String, header: String, refresh: (NetworkRequestFactory) async throws -> TokenAuthorization)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sunday\/refreshingheadertokenauthorizingadapter\/adapt(requestfactory:urlrequest:)","title":"func adapt(requestFactory: NetworkRequestFactory, urlRequest: URLRequest) async throws -> URLRequest","type":"method"}],"path":"\/documentation\/sunday\/refreshingheadertokenauthorizingadapter","title":"RefreshingHeaderTokenAuthorizingAdapter","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sunday\/resultresponse\/init(result:response:)","title":"init(result: T, response: HTTPURLResponse)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sunday\/resultresponse\/response","title":"let response: HTTPURLResponse","type":"property"},{"path":"\/documentation\/sunday\/resultresponse\/result","title":"let result: T","type":"property"}],"path":"\/documentation\/sunday\/resultresponse","title":"ResultResponse","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sunday\/servertrustpolicymanager\/init(policies:)","title":"init(policies: [String : ServerTrustPolicy])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sunday\/servertrustpolicymanager\/policies","title":"let policies: [String : ServerTrustPolicy]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sunday\/servertrustpolicymanager\/servertrustpolicy(forhost:)","title":"func serverTrustPolicy(forHost: String) -> ServerTrustPolicy?","type":"method"}],"path":"\/documentation\/sunday\/servertrustpolicymanager","title":"ServerTrustPolicyManager","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sunday\/servicelocator\/service\/hostname","title":"let hostName: String","type":"property"},{"path":"\/documentation\/sunday\/servicelocator\/service\/port","title":"let port: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sunday\/servicelocator\/service\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sunday\/servicelocator\/service\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/sunday\/servicelocator\/service","title":"ServiceLocator.Service","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sunday\/servicelocator\/init(instance:type:domain:signal:)","title":"init(instance: String?, type: String, domain: String, signal: ServiceLocator.Signal)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sunday\/servicelocator\/located","title":"var located: [ServiceLocator.Service]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sunday\/servicelocator\/netservicebrowser(_:didfind:morecoming:)","title":"func netServiceBrowser(NetServiceBrowser, didFind: NetService, moreComing: Bool)","type":"method"},{"path":"\/documentation\/sunday\/servicelocator\/netservicebrowser(_:didremove:morecoming:)","title":"func netServiceBrowser(NetServiceBrowser, didRemove: NetService, moreComing: Bool)","type":"method"},{"path":"\/documentation\/sunday\/servicelocator\/netservicedidresolveaddress(_:)","title":"func netServiceDidResolveAddress(NetService)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/sunday\/servicelocator\/signal","title":"ServiceLocator.Signal","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/sunday\/servicelocator\/locate(instance:type:domain:timeout:)","title":"static func locate(instance: String?, type: String, domain: String, timeout: TimeInterval) -> ServiceLocator.Service?","type":"method"}],"path":"\/documentation\/sunday\/servicelocator","title":"ServiceLocator","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/sunday\/anypatchop\/value","title":"Value","type":"associatedtype"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/sunday\/anypatchop\/merge(_:)","title":"static func merge(Self.Value) -> Self","type":"method"}],"path":"\/documentation\/sunday\/anypatchop","title":"AnyPatchOp","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sunday\/mediatypedecoder\/decode(_:from:)","title":"func decode<T>(T.Type, from: Data) throws -> T","type":"method"}],"path":"\/documentation\/sunday\/mediatypedecoder","title":"MediaTypeDecoder","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sunday\/mediatypeencoder\/encode(_:)","title":"func encode<T>(T) throws -> Data","type":"method"}],"path":"\/documentation\/sunday\/mediatypeencoder","title":"MediaTypeEncoder","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sunday\/networkrequestadapter\/adapt(requestfactory:urlrequest:)","title":"func adapt(requestFactory: NetworkRequestFactory, urlRequest: URLRequest) async throws -> URLRequest","type":"method"}],"path":"\/documentation\/sunday\/networkrequestadapter","title":"NetworkRequestAdapter","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sunday\/requestfactory\/baseurl","title":"var baseURL: URI.Template","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sunday\/requestfactory\/close(canceloutstandingrequests:)","title":"func close(cancelOutstandingRequests: Bool)","type":"method"},{"path":"\/documentation\/sunday\/requestfactory\/eventsource(method:pathtemplate:pathparameters:queryparameters:body:contenttypes:accepttypes:headers:)","title":"func eventSource<B>(method: HTTP.Method, pathTemplate: String, pathParameters: Parameters?, queryParameters: Parameters?, body: B?, contentTypes: [MediaType]?, acceptTypes: [MediaType]?, headers: Parameters?) -> EventSource","type":"method"},{"path":"\/documentation\/sunday\/requestfactory\/eventstream(method:pathtemplate:pathparameters:queryparameters:body:contenttypes:accepttypes:headers:decoder:)","title":"func eventStream<B, D>(method: HTTP.Method, pathTemplate: String, pathParameters: Parameters?, queryParameters: Parameters?, body: B?, contentTypes: [MediaType]?, acceptTypes: [MediaType]?, headers: Parameters?, decoder: (TextMediaTypeDecoder, String?, String?, String, Logger) throws -> D?) -> AsyncStream<D>","type":"method"},{"path":"\/documentation\/sunday\/requestfactory\/registerproblem(type:problemtype:)-3swcj","title":"func registerProblem(type: URL, problemType: Problem.Type)","type":"method"},{"path":"\/documentation\/sunday\/requestfactory\/registerproblem(type:problemtype:)-5jgj1","title":"func registerProblem(type: String, problemType: Problem.Type)","type":"method"},{"path":"\/documentation\/sunday\/requestfactory\/request(method:pathtemplate:pathparameters:queryparameters:body:contenttypes:accepttypes:headers:)","title":"func request<B>(method: HTTP.Method, pathTemplate: String, pathParameters: Parameters?, queryParameters: Parameters?, body: B?, contentTypes: [MediaType]?, acceptTypes: [MediaType]?, headers: Parameters?) async throws -> URLRequest","type":"method"},{"path":"\/documentation\/sunday\/requestfactory\/response(method:pathtemplate:pathparameters:queryparameters:body:contenttypes:accepttypes:headers:)","title":"func response<B>(method: HTTP.Method, pathTemplate: String, pathParameters: Parameters?, queryParameters: Parameters?, body: B?, contentTypes: [MediaType]?, acceptTypes: [MediaType]?, headers: Parameters?) async throws -> (Data?, HTTPURLResponse)","type":"method"},{"path":"\/documentation\/sunday\/requestfactory\/response(request:)","title":"func response(request: URLRequest) async throws -> (Data?, HTTPURLResponse)","type":"method"},{"path":"\/documentation\/sunday\/requestfactory\/result(method:pathtemplate:pathparameters:queryparameters:body:contenttypes:accepttypes:headers:)-16zk6","title":"func result<B, D>(method: HTTP.Method, pathTemplate: String, pathParameters: Parameters?, queryParameters: Parameters?, body: B?, contentTypes: [MediaType]?, acceptTypes: [MediaType]?, headers: Parameters?) async throws -> D","type":"method"},{"path":"\/documentation\/sunday\/requestfactory\/result(method:pathtemplate:pathparameters:queryparameters:body:contenttypes:accepttypes:headers:)-5cesd","title":"func result<B>(method: HTTP.Method, pathTemplate: String, pathParameters: Parameters?, queryParameters: Parameters?, body: B?, contentTypes: [MediaType]?, acceptTypes: [MediaType]?, headers: Parameters?) async throws","type":"method"},{"path":"\/documentation\/sunday\/requestfactory\/resultresponse(method:pathtemplate:pathparameters:queryparameters:body:contenttypes:accepttypes:headers:)-9xf7c","title":"func resultResponse<B>(method: HTTP.Method, pathTemplate: String, pathParameters: Parameters?, queryParameters: Parameters?, body: B?, contentTypes: [MediaType]?, acceptTypes: [MediaType]?, headers: Parameters?) async throws -> ResultResponse<Void>","type":"method"},{"path":"\/documentation\/sunday\/requestfactory\/resultresponse(method:pathtemplate:pathparameters:queryparameters:body:contenttypes:accepttypes:headers:)-ogwh","title":"func resultResponse<B, D>(method: HTTP.Method, pathTemplate: String, pathParameters: Parameters?, queryParameters: Parameters?, body: B?, contentTypes: [MediaType]?, acceptTypes: [MediaType]?, headers: Parameters?) async throws -> ResultResponse<D>","type":"method"}],"path":"\/documentation\/sunday\/requestfactory","title":"RequestFactory","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sunday\/textmediatypedecoder\/decode(_:from:)","title":"func decode<T>(T.Type, from: String) throws -> T","type":"method"}],"path":"\/documentation\/sunday\/textmediatypedecoder","title":"TextMediaTypeDecoder","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sunday\/anytextmediatypedecodable\/decode","title":"let decode: (TextMediaTypeDecoder, String) throws -> Any?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/sunday\/anytextmediatypedecodable\/erase(_:)","title":"static func erase<D>(D.Type) -> AnyTextMediaTypeDecodable","type":"method"}],"path":"\/documentation\/sunday\/anytextmediatypedecodable","title":"AnyTextMediaTypeDecodable","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sunday\/datadecoder\/decode(_:from:)","title":"func decode<T>(T.Type, from: Data) throws -> T","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/sunday\/datadecoder\/default","title":"static let `default`: DataDecoder","type":"property"}],"path":"\/documentation\/sunday\/datadecoder","title":"DataDecoder","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sunday\/dataencoder\/encode(_:)","title":"func encode<T>(T) throws -> Data","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/sunday\/dataencoder\/default","title":"static let `default`: DataEncoder","type":"property"}],"path":"\/documentation\/sunday\/dataencoder","title":"DataEncoder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sunday\/descriptionbuilder\/init(_:)","title":"init(Any.Type)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sunday\/descriptionbuilder\/add(_:named:)","title":"func add(Any?, named: String) -> DescriptionBuilder","type":"method"},{"path":"\/documentation\/sunday\/descriptionbuilder\/build()","title":"func build() -> String","type":"method"}],"path":"\/documentation\/sunday\/descriptionbuilder","title":"DescriptionBuilder","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/sunday\/empty\/instance","title":"static let instance: Empty","type":"property"},{"path":"\/documentation\/sunday\/empty\/none","title":"static let none: Empty?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sunday\/empty\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/sunday\/empty\/decodable-implementations","title":"Decodable Implementations","type":"symbol"}],"path":"\/documentation\/sunday\/empty","title":"Empty","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sunday\/http\/header\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sunday\/http\/header\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/sunday\/http\/header","title":"HTTP.Header","type":"struct"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/sunday\/http\/headerlist","title":"HTTP.HeaderList","type":"typealias"},{"path":"\/documentation\/sunday\/http\/headers","title":"HTTP.Headers","type":"typealias"},{"path":"\/documentation\/sunday\/http\/rawheaders","title":"HTTP.RawHeaders","type":"typealias"},{"path":"\/documentation\/sunday\/http\/version","title":"HTTP.Version","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/sunday\/http\/statustext","title":"static let statusText: [HTTP.StatusCode : String]","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/sunday\/http\/method\/connect","title":"case connect","type":"case"},{"path":"\/documentation\/sunday\/http\/method\/delete","title":"case delete","type":"case"},{"path":"\/documentation\/sunday\/http\/method\/get","title":"case get","type":"case"},{"path":"\/documentation\/sunday\/http\/method\/head","title":"case head","type":"case"},{"path":"\/documentation\/sunday\/http\/method\/options","title":"case options","type":"case"},{"path":"\/documentation\/sunday\/http\/method\/patch","title":"case patch","type":"case"},{"path":"\/documentation\/sunday\/http\/method\/post","title":"case post","type":"case"},{"path":"\/documentation\/sunday\/http\/method\/put","title":"case put","type":"case"},{"path":"\/documentation\/sunday\/http\/method\/trace","title":"case trace","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sunday\/http\/method\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sunday\/http\/method\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sunday\/http\/method\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sunday\/http\/method\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sunday\/http\/method\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/sunday\/http\/method\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/sunday\/http\/method","title":"HTTP.Method","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/sunday\/http\/statuscode\/accepted","title":"case accepted","type":"case"},{"path":"\/documentation\/sunday\/http\/statuscode\/badgateway","title":"case badGateway","type":"case"},{"path":"\/documentation\/sunday\/http\/statuscode\/badrequest","title":"case badRequest","type":"case"},{"path":"\/documentation\/sunday\/http\/statuscode\/conflict","title":"case conflict","type":"case"},{"path":"\/documentation\/sunday\/http\/statuscode\/continue","title":"case `continue`","type":"case"},{"path":"\/documentation\/sunday\/http\/statuscode\/created","title":"case created","type":"case"},{"path":"\/documentation\/sunday\/http\/statuscode\/expectationfailed","title":"case expectationFailed","type":"case"},{"path":"\/documentation\/sunday\/http\/statuscode\/forbidden","title":"case forbidden","type":"case"},{"path":"\/documentation\/sunday\/http\/statuscode\/found","title":"case found","type":"case"},{"path":"\/documentation\/sunday\/http\/statuscode\/gatewaytimeout","title":"case gatewayTimeout","type":"case"},{"path":"\/documentation\/sunday\/http\/statuscode\/gone","title":"case gone","type":"case"},{"path":"\/documentation\/sunday\/http\/statuscode\/httpversionnotsupported","title":"case httpVersionNotSupported","type":"case"},{"path":"\/documentation\/sunday\/http\/statuscode\/internalservererror","title":"case internalServerError","type":"case"},{"path":"\/documentation\/sunday\/http\/statuscode\/lengthrequired","title":"case lengthRequired","type":"case"},{"path":"\/documentation\/sunday\/http\/statuscode\/methodnotallowed","title":"case methodNotAllowed","type":"case"},{"path":"\/documentation\/sunday\/http\/statuscode\/movedpermanently","title":"case movedPermanently","type":"case"},{"path":"\/documentation\/sunday\/http\/statuscode\/multiplechoices","title":"case multipleChoices","type":"case"},{"path":"\/documentation\/sunday\/http\/statuscode\/nocontent","title":"case noContent","type":"case"},{"path":"\/documentation\/sunday\/http\/statuscode\/nonauthoritativeinformation","title":"case nonAuthoritativeInformation","type":"case"},{"path":"\/documentation\/sunday\/http\/statuscode\/notacceptable","title":"case notAcceptable","type":"case"},{"path":"\/documentation\/sunday\/http\/statuscode\/notfound","title":"case notFound","type":"case"},{"path":"\/documentation\/sunday\/http\/statuscode\/notimplemented","title":"case notImplemented","type":"case"},{"path":"\/documentation\/sunday\/http\/statuscode\/notmodified","title":"case notModified","type":"case"},{"path":"\/documentation\/sunday\/http\/statuscode\/ok","title":"case ok","type":"case"},{"path":"\/documentation\/sunday\/http\/statuscode\/partialcontent","title":"case partialContent","type":"case"},{"path":"\/documentation\/sunday\/http\/statuscode\/paymentrequired","title":"case paymentRequired","type":"case"},{"path":"\/documentation\/sunday\/http\/statuscode\/preconditionfailed","title":"case preconditionFailed","type":"case"},{"path":"\/documentation\/sunday\/http\/statuscode\/proxyauthenticationrequired","title":"case proxyAuthenticationRequired","type":"case"},{"path":"\/documentation\/sunday\/http\/statuscode\/requestentitytoolarge","title":"case requestEntityTooLarge","type":"case"},{"path":"\/documentation\/sunday\/http\/statuscode\/requestrangenotsatisfiable","title":"case requestRangeNotSatisfiable","type":"case"},{"path":"\/documentation\/sunday\/http\/statuscode\/requesttimeout","title":"case requestTimeout","type":"case"},{"path":"\/documentation\/sunday\/http\/statuscode\/requesturitoolong","title":"case requestUriTooLong","type":"case"},{"path":"\/documentation\/sunday\/http\/statuscode\/resetcontent","title":"case resetContent","type":"case"},{"path":"\/documentation\/sunday\/http\/statuscode\/seeother","title":"case seeOther","type":"case"},{"path":"\/documentation\/sunday\/http\/statuscode\/serviceunavailable","title":"case serviceUnavailable","type":"case"},{"path":"\/documentation\/sunday\/http\/statuscode\/switchingprotocols","title":"case switchingProtocols","type":"case"},{"path":"\/documentation\/sunday\/http\/statuscode\/temporaryredirect","title":"case temporaryRedirect","type":"case"},{"path":"\/documentation\/sunday\/http\/statuscode\/unauthenticated","title":"case unauthenticated","type":"case"},{"path":"\/documentation\/sunday\/http\/statuscode\/unsupportedmediatype","title":"case unsupportedMediaType","type":"case"},{"path":"\/documentation\/sunday\/http\/statuscode\/useproxy","title":"case useProxy","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sunday\/http\/statuscode\/init(integerliteral:)","title":"init(integerLiteral: IntegerLiteralType)","type":"init"},{"path":"\/documentation\/sunday\/http\/statuscode\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sunday\/http\/statuscode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sunday\/http\/statuscode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sunday\/http\/statuscode\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sunday\/http\/statuscode\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sunday\/http\/statuscode\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/sunday\/http\/statuscode\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/sunday\/http\/statuscode\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/sunday\/http\/statuscode","title":"HTTP.StatusCode","type":"enum"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/sunday\/http\/stdheaders\/accept","title":"static let accept: String","type":"property"},{"path":"\/documentation\/sunday\/http\/stdheaders\/authorization","title":"static let authorization: String","type":"property"},{"path":"\/documentation\/sunday\/http\/stdheaders\/connection","title":"static let connection: String","type":"property"},{"path":"\/documentation\/sunday\/http\/stdheaders\/contentlength","title":"static let contentLength: String","type":"property"},{"path":"\/documentation\/sunday\/http\/stdheaders\/contenttype","title":"static let contentType: String","type":"property"},{"path":"\/documentation\/sunday\/http\/stdheaders\/cookie","title":"static let cookie: String","type":"property"},{"path":"\/documentation\/sunday\/http\/stdheaders\/expect","title":"static let expect: String","type":"property"},{"path":"\/documentation\/sunday\/http\/stdheaders\/lasteventid","title":"static let lastEventId: String","type":"property"},{"path":"\/documentation\/sunday\/http\/stdheaders\/location","title":"static let location: String","type":"property"},{"path":"\/documentation\/sunday\/http\/stdheaders\/server","title":"static let server: String","type":"property"},{"path":"\/documentation\/sunday\/http\/stdheaders\/setcookie","title":"static let setCookie: String","type":"property"},{"path":"\/documentation\/sunday\/http\/stdheaders\/transferencoding","title":"static let transferEncoding: String","type":"property"},{"path":"\/documentation\/sunday\/http\/stdheaders\/useragent","title":"static let userAgent: String","type":"property"}],"path":"\/documentation\/sunday\/http\/stdheaders","title":"HTTP.StdHeaders","type":"enum"}],"path":"\/documentation\/sunday\/http","title":"HTTP","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sunday\/mediatype\/init(_:)","title":"init?(String)","type":"init"},{"path":"\/documentation\/sunday\/mediatype\/init(type:tree:subtype:suffix:parameters:)","title":"init(type: MediaType.Type, tree: MediaType.Tree, subtype: String, suffix: MediaType.Suffix?, parameters: [String : String])","type":"init"},{"path":"\/documentation\/sunday\/mediatype\/init(valid:)","title":"init(valid: String) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sunday\/mediatype\/parameters","title":"let parameters: [String : String]","type":"property"},{"path":"\/documentation\/sunday\/mediatype\/subtype","title":"let subtype: String","type":"property"},{"path":"\/documentation\/sunday\/mediatype\/suffix-swift.property","title":"let suffix: MediaType.Suffix?","type":"property"},{"path":"\/documentation\/sunday\/mediatype\/tree-swift.property","title":"let tree: MediaType.Tree","type":"property"},{"path":"\/documentation\/sunday\/mediatype\/type-swift.property","title":"let type: MediaType.Type","type":"property"},{"path":"\/documentation\/sunday\/mediatype\/value","title":"var value: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sunday\/mediatype\/parameter(_:)-35i95","title":"func parameter(String) -> String?","type":"method"},{"path":"\/documentation\/sunday\/mediatype\/parameter(_:)-42mqb","title":"func parameter(MediaType.StandardParameterName) -> String?","type":"method"},{"path":"\/documentation\/sunday\/mediatype\/with(_:forparameter:)-3v4sg","title":"func with(String, forParameter: String) -> MediaType","type":"method"},{"path":"\/documentation\/sunday\/mediatype\/with(_:forparameter:)-kgnf","title":"func with(String, forParameter: MediaType.StandardParameterName) -> MediaType","type":"method"},{"path":"\/documentation\/sunday\/mediatype\/with(type:tree:subtype:parameters:)","title":"func with(type: MediaType.Type?, tree: MediaType.Tree?, subtype: String?, parameters: [String : String]?) -> MediaType","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/sunday\/mediatype\/any","title":"static let any: MediaType","type":"property"},{"path":"\/documentation\/sunday\/mediatype\/anyaudio","title":"static let anyAudio: MediaType","type":"property"},{"path":"\/documentation\/sunday\/mediatype\/anyimage","title":"static let anyImage: MediaType","type":"property"},{"path":"\/documentation\/sunday\/mediatype\/anytext","title":"static let anyText: MediaType","type":"property"},{"path":"\/documentation\/sunday\/mediatype\/anyvideo","title":"static let anyVideo: MediaType","type":"property"},{"path":"\/documentation\/sunday\/mediatype\/cbor","title":"static let cbor: MediaType","type":"property"},{"path":"\/documentation\/sunday\/mediatype\/eventstream","title":"static let eventStream: MediaType","type":"property"},{"path":"\/documentation\/sunday\/mediatype\/html","title":"static let html: MediaType","type":"property"},{"path":"\/documentation\/sunday\/mediatype\/json","title":"static let json: MediaType","type":"property"},{"path":"\/documentation\/sunday\/mediatype\/jsonpatch","title":"static let jsonPatch: MediaType","type":"property"},{"path":"\/documentation\/sunday\/mediatype\/jsonstructured","title":"static let jsonStructured: MediaType","type":"property"},{"path":"\/documentation\/sunday\/mediatype\/mergepatch","title":"static let mergePatch: MediaType","type":"property"},{"path":"\/documentation\/sunday\/mediatype\/octetstream","title":"static let octetStream: MediaType","type":"property"},{"path":"\/documentation\/sunday\/mediatype\/plain","title":"static let plain: MediaType","type":"property"},{"path":"\/documentation\/sunday\/mediatype\/problem","title":"static let problem: MediaType","type":"property"},{"path":"\/documentation\/sunday\/mediatype\/wwwformurlencoded","title":"static let wwwFormUrlEncoded: MediaType","type":"property"},{"path":"\/documentation\/sunday\/mediatype\/x509cacert","title":"static let x509CACert: MediaType","type":"property"},{"path":"\/documentation\/sunday\/mediatype\/x509usercert","title":"static let x509UserCert: MediaType","type":"property"},{"path":"\/documentation\/sunday\/mediatype\/xmlstructured","title":"static let xmlStructured: MediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/sunday\/mediatype\/compatible(lhs:rhs:)","title":"static func compatible(lhs: MediaType, rhs: MediaType) -> Bool","type":"method"},{"path":"\/documentation\/sunday\/mediatype\/from(accept:)","title":"static func from(accept: [String]) -> [MediaType]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/sunday\/mediatype\/error\/invalid","title":"case invalid","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sunday\/mediatype\/error\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sunday\/mediatype\/error\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sunday\/mediatype\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/sunday\/mediatype\/error\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/sunday\/mediatype\/error","title":"MediaType.Error","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/sunday\/mediatype\/standardparametername\/charset","title":"case charSet","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sunday\/mediatype\/standardparametername\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sunday\/mediatype\/standardparametername\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sunday\/mediatype\/standardparametername\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sunday\/mediatype\/standardparametername\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sunday\/mediatype\/standardparametername\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/sunday\/mediatype\/standardparametername\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/sunday\/mediatype\/standardparametername","title":"MediaType.StandardParameterName","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/sunday\/mediatype\/suffix-swift.enum\/ber","title":"case ber","type":"case"},{"path":"\/documentation\/sunday\/mediatype\/suffix-swift.enum\/cbor","title":"case cbor","type":"case"},{"path":"\/documentation\/sunday\/mediatype\/suffix-swift.enum\/der","title":"case der","type":"case"},{"path":"\/documentation\/sunday\/mediatype\/suffix-swift.enum\/fastinfoset","title":"case fastinfoset","type":"case"},{"path":"\/documentation\/sunday\/mediatype\/suffix-swift.enum\/json","title":"case json","type":"case"},{"path":"\/documentation\/sunday\/mediatype\/suffix-swift.enum\/wbxml","title":"case wbxml","type":"case"},{"path":"\/documentation\/sunday\/mediatype\/suffix-swift.enum\/xml","title":"case xml","type":"case"},{"path":"\/documentation\/sunday\/mediatype\/suffix-swift.enum\/zip","title":"case zip","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sunday\/mediatype\/suffix-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sunday\/mediatype\/suffix-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sunday\/mediatype\/suffix-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sunday\/mediatype\/suffix-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sunday\/mediatype\/suffix-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sunday\/mediatype\/suffix-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/sunday\/mediatype\/suffix-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/sunday\/mediatype\/suffix-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/sunday\/mediatype\/suffix-swift.enum","title":"MediaType.Suffix","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/sunday\/mediatype\/tree-swift.enum\/any","title":"case any","type":"case"},{"path":"\/documentation\/sunday\/mediatype\/tree-swift.enum\/obsolete","title":"case obsolete","type":"case"},{"path":"\/documentation\/sunday\/mediatype\/tree-swift.enum\/personal","title":"case personal","type":"case"},{"path":"\/documentation\/sunday\/mediatype\/tree-swift.enum\/standard","title":"case standard","type":"case"},{"path":"\/documentation\/sunday\/mediatype\/tree-swift.enum\/unregistered","title":"case unregistered","type":"case"},{"path":"\/documentation\/sunday\/mediatype\/tree-swift.enum\/vendor","title":"case vendor","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sunday\/mediatype\/tree-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sunday\/mediatype\/tree-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sunday\/mediatype\/tree-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sunday\/mediatype\/tree-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sunday\/mediatype\/tree-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sunday\/mediatype\/tree-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/sunday\/mediatype\/tree-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/sunday\/mediatype\/tree-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/sunday\/mediatype\/tree-swift.enum","title":"MediaType.Tree","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/sunday\/mediatype\/type-swift.enum\/any","title":"case any","type":"case"},{"path":"\/documentation\/sunday\/mediatype\/type-swift.enum\/application","title":"case application","type":"case"},{"path":"\/documentation\/sunday\/mediatype\/type-swift.enum\/audio","title":"case audio","type":"case"},{"path":"\/documentation\/sunday\/mediatype\/type-swift.enum\/example","title":"case example","type":"case"},{"path":"\/documentation\/sunday\/mediatype\/type-swift.enum\/font","title":"case font","type":"case"},{"path":"\/documentation\/sunday\/mediatype\/type-swift.enum\/image","title":"case image","type":"case"},{"path":"\/documentation\/sunday\/mediatype\/type-swift.enum\/message","title":"case message","type":"case"},{"path":"\/documentation\/sunday\/mediatype\/type-swift.enum\/model","title":"case model","type":"case"},{"path":"\/documentation\/sunday\/mediatype\/type-swift.enum\/multipart","title":"case multipart","type":"case"},{"path":"\/documentation\/sunday\/mediatype\/type-swift.enum\/text","title":"case text","type":"case"},{"path":"\/documentation\/sunday\/mediatype\/type-swift.enum\/video","title":"case video","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sunday\/mediatype\/type-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sunday\/mediatype\/type-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sunday\/mediatype\/type-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sunday\/mediatype\/type-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sunday\/mediatype\/type-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sunday\/mediatype\/type-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/sunday\/mediatype\/type-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/sunday\/mediatype\/type-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/sunday\/mediatype\/type-swift.enum","title":"MediaType.Type","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sunday\/mediatype\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/sunday\/mediatype\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sunday\/mediatype\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/sunday\/mediatype\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sunday\/mediatype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/sunday\/mediatype\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sunday\/mediatype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sunday\/mediatype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/sunday\/mediatype","title":"MediaType","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sunday\/mediatypedecoders\/builder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sunday\/mediatypedecoders\/builder\/build()","title":"func build() -> MediaTypeDecoders","type":"method"},{"path":"\/documentation\/sunday\/mediatypedecoders\/builder\/merged(_:)","title":"func merged([MediaType : MediaTypeDecoder]) -> MediaTypeDecoders.Builder","type":"method"},{"path":"\/documentation\/sunday\/mediatypedecoders\/builder\/register(decoder:fortypes:)","title":"func register(decoder: MediaTypeDecoder, forTypes: MediaType...) -> MediaTypeDecoders.Builder","type":"method"},{"path":"\/documentation\/sunday\/mediatypedecoders\/builder\/registercbor()","title":"func registerCBOR() -> MediaTypeDecoders.Builder","type":"method"},{"path":"\/documentation\/sunday\/mediatypedecoders\/builder\/registercbor(decoder:)","title":"func registerCBOR(decoder: CBOR.Decoder) -> MediaTypeDecoders.Builder","type":"method"},{"path":"\/documentation\/sunday\/mediatypedecoders\/builder\/registerdata()","title":"func registerData() -> MediaTypeDecoders.Builder","type":"method"},{"path":"\/documentation\/sunday\/mediatypedecoders\/builder\/registerdefault()","title":"func registerDefault() -> MediaTypeDecoders.Builder","type":"method"},{"path":"\/documentation\/sunday\/mediatypedecoders\/builder\/registereventstream()","title":"func registerEventStream() -> MediaTypeDecoders.Builder","type":"method"},{"path":"\/documentation\/sunday\/mediatypedecoders\/builder\/registerjson()","title":"func registerJSON() -> MediaTypeDecoders.Builder","type":"method"},{"path":"\/documentation\/sunday\/mediatypedecoders\/builder\/registerjson(decoder:)","title":"func registerJSON(decoder: JSON.Decoder) -> MediaTypeDecoders.Builder","type":"method"},{"path":"\/documentation\/sunday\/mediatypedecoders\/builder\/registertext()","title":"func registerText() -> MediaTypeDecoders.Builder","type":"method"},{"path":"\/documentation\/sunday\/mediatypedecoders\/builder\/registerx509()","title":"func registerX509() -> MediaTypeDecoders.Builder","type":"method"}],"path":"\/documentation\/sunday\/mediatypedecoders\/builder","title":"MediaTypeDecoders.Builder","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sunday\/mediatypedecoders\/find(for:)","title":"func find(for: MediaType) throws -> MediaTypeDecoder","type":"method"},{"path":"\/documentation\/sunday\/mediatypedecoders\/supports(for:)","title":"func supports(for: MediaType) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/sunday\/mediatypedecoders\/default","title":"static let `default`: MediaTypeDecoders","type":"property"}],"path":"\/documentation\/sunday\/mediatypedecoders","title":"MediaTypeDecoders","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sunday\/mediatypeencoders\/builder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sunday\/mediatypeencoders\/builder\/build()","title":"func build() -> MediaTypeEncoders","type":"method"},{"path":"\/documentation\/sunday\/mediatypeencoders\/builder\/merged(_:)","title":"func merged([MediaType : MediaTypeEncoder]) -> MediaTypeEncoders.Builder","type":"method"},{"path":"\/documentation\/sunday\/mediatypeencoders\/builder\/register(encoder:fortypes:)","title":"func register(encoder: MediaTypeEncoder, forTypes: MediaType...) -> MediaTypeEncoders.Builder","type":"method"},{"path":"\/documentation\/sunday\/mediatypeencoders\/builder\/registercbor()","title":"func registerCBOR() -> MediaTypeEncoders.Builder","type":"method"},{"path":"\/documentation\/sunday\/mediatypeencoders\/builder\/registercbor(encoder:)","title":"func registerCBOR(encoder: CBOR.Encoder) -> MediaTypeEncoders.Builder","type":"method"},{"path":"\/documentation\/sunday\/mediatypeencoders\/builder\/registerdata()","title":"func registerData() -> MediaTypeEncoders.Builder","type":"method"},{"path":"\/documentation\/sunday\/mediatypeencoders\/builder\/registerdefault()","title":"func registerDefault() -> MediaTypeEncoders.Builder","type":"method"},{"path":"\/documentation\/sunday\/mediatypeencoders\/builder\/registerjson()","title":"func registerJSON() -> MediaTypeEncoders.Builder","type":"method"},{"path":"\/documentation\/sunday\/mediatypeencoders\/builder\/registerjson(encoder:)","title":"func registerJSON(encoder: JSON.Encoder) -> MediaTypeEncoders.Builder","type":"method"},{"path":"\/documentation\/sunday\/mediatypeencoders\/builder\/registertext()","title":"func registerText() -> MediaTypeEncoders.Builder","type":"method"},{"path":"\/documentation\/sunday\/mediatypeencoders\/builder\/registerurl(arrayendcoding:boolencoding:dateencoding:encoder:)","title":"func registerURL(arrayEndcoding: WWWFormURLEncoder.ArrayEncoding, boolEncoding: WWWFormURLEncoder.BoolEncoding, dateEncoding: WWWFormURLEncoder.DateEncoding, encoder: AnyValueEncoder) -> MediaTypeEncoders.Builder","type":"method"},{"path":"\/documentation\/sunday\/mediatypeencoders\/builder\/registerx509()","title":"func registerX509() -> MediaTypeEncoders.Builder","type":"method"}],"path":"\/documentation\/sunday\/mediatypeencoders\/builder","title":"MediaTypeEncoders.Builder","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sunday\/mediatypeencoders\/find(for:)","title":"func find(for: MediaType) throws -> MediaTypeEncoder","type":"method"},{"path":"\/documentation\/sunday\/mediatypeencoders\/supports(for:)","title":"func supports(for: MediaType) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/sunday\/mediatypeencoders\/default","title":"static let `default`: MediaTypeEncoders","type":"property"}],"path":"\/documentation\/sunday\/mediatypeencoders","title":"MediaTypeEncoders","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sunday\/textdecoder\/decode(_:from:)-1ytkr","title":"func decode<T>(T.Type, from: String) throws -> T","type":"method"},{"path":"\/documentation\/sunday\/textdecoder\/decode(_:from:)-21y5m","title":"func decode<T>(T.Type, from: Data) throws -> T","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/sunday\/textdecoder\/default","title":"static let `default`: TextDecoder","type":"property"}],"path":"\/documentation\/sunday\/textdecoder","title":"TextDecoder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sunday\/textencoder\/init(encoding:)","title":"init(encoding: String.Encoding)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sunday\/textencoder\/encoding","title":"let encoding: String.Encoding","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sunday\/textencoder\/encode(_:)","title":"func encode<T>(T) throws -> Data","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/sunday\/textencoder\/default","title":"static let `default`: TextEncoder","type":"property"}],"path":"\/documentation\/sunday\/textencoder","title":"TextEncoder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sunday\/tokenauthorization\/init(token:expires:)","title":"init(token: String, expires: Date)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sunday\/tokenauthorization\/expires","title":"let expires: Date","type":"property"},{"path":"\/documentation\/sunday\/tokenauthorization\/token","title":"let token: String","type":"property"}],"path":"\/documentation\/sunday\/tokenauthorization","title":"TokenAuthorization","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sunday\/uri\/template\/init(format:parameters:)","title":"init(format: String, parameters: Parameters)","type":"init"},{"path":"\/documentation\/sunday\/uri\/template\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sunday\/uri\/template\/format","title":"let format: String","type":"property"},{"path":"\/documentation\/sunday\/uri\/template\/parameters","title":"let parameters: Parameters","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sunday\/uri\/template\/complete(relative:parameters:encoders:)","title":"func complete(relative: String, parameters: Parameters, encoders: PathEncoders) throws -> URL","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/sunday\/uri\/template\/error\/missingparametervalue(name:)","title":"case missingParameterValue(name: String)","type":"case"},{"path":"\/documentation\/sunday\/uri\/template\/error\/unsupportedparametertype(name:type:)","title":"case unsupportedParameterType(name: String, type: Any.Type)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sunday\/uri\/template\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/sunday\/uri\/template\/error\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/sunday\/uri\/template\/error","title":"URI.Template.Error","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sunday\/uri\/template\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/sunday\/uri\/template\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sunday\/uri\/template\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/sunday\/uri\/template\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/sunday\/uri\/template","title":"URI.Template","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sunday\/uri\/init(components:)","title":"init(components: URLComponents)","type":"init"},{"path":"\/documentation\/sunday\/uri\/init(scheme:host:path:queryitems:fragment:)","title":"init(scheme: String?, host: String?, path: String, queryItems: [URLQueryItem]?, fragment: String?)","type":"init"},{"path":"\/documentation\/sunday\/uri\/init(string:)","title":"init(string: String) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sunday\/uri\/fragment","title":"var fragment: String?","type":"property"},{"path":"\/documentation\/sunday\/uri\/host","title":"var host: String?","type":"property"},{"path":"\/documentation\/sunday\/uri\/password","title":"var password: String?","type":"property"},{"path":"\/documentation\/sunday\/uri\/path","title":"var path: String","type":"property"},{"path":"\/documentation\/sunday\/uri\/port","title":"var port: Int?","type":"property"},{"path":"\/documentation\/sunday\/uri\/query","title":"var query: String?","type":"property"},{"path":"\/documentation\/sunday\/uri\/queryitems","title":"var queryItems: [URLQueryItem]?","type":"property"},{"path":"\/documentation\/sunday\/uri\/scheme","title":"var scheme: String?","type":"property"},{"path":"\/documentation\/sunday\/uri\/string","title":"var string: String?","type":"property"},{"path":"\/documentation\/sunday\/uri\/user","title":"var user: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/sunday\/uri\/error\/invaliduri","title":"case invalidURI","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sunday\/uri\/error\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sunday\/uri\/error\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sunday\/uri\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/sunday\/uri\/error\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/sunday\/uri\/error","title":"URI.Error","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sunday\/uri\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/sunday\/uri\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sunday\/uri\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/sunday\/uri\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sunday\/uri\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sunday\/uri\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/sunday\/uri","title":"URI","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sunday\/wwwformurlencoder\/init(arrayencoding:boolencoding:dateencoding:encoder:)","title":"init(arrayEncoding: WWWFormURLEncoder.ArrayEncoding, boolEncoding: WWWFormURLEncoder.BoolEncoding, dateEncoding: WWWFormURLEncoder.DateEncoding, encoder: AnyValueEncoder)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sunday\/wwwformurlencoder\/encode(_:)","title":"func encode<T>(T) throws -> Data","type":"method"},{"path":"\/documentation\/sunday\/wwwformurlencoder\/encodequerycomponent(fromkey:value:)","title":"func encodeQueryComponent(fromKey: String, value: Any?) -> [String]","type":"method"},{"path":"\/documentation\/sunday\/wwwformurlencoder\/encodequerystring(parameters:)","title":"func encodeQueryString(parameters: Parameters) -> String","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/sunday\/wwwformurlencoder\/default","title":"static let `default`: WWWFormURLEncoder","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/sunday\/wwwformurlencoder\/encodeuricomponent(_:)","title":"static func encodeURIComponent(String) -> String","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/sunday\/wwwformurlencoder\/arrayencoding\/bracketed","title":"case bracketed","type":"case"},{"path":"\/documentation\/sunday\/wwwformurlencoder\/arrayencoding\/unbracketed","title":"case unbracketed","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sunday\/wwwformurlencoder\/arrayencoding\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sunday\/wwwformurlencoder\/arrayencoding\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/sunday\/wwwformurlencoder\/arrayencoding","title":"WWWFormURLEncoder.ArrayEncoding","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/sunday\/wwwformurlencoder\/boolencoding\/literal","title":"case literal","type":"case"},{"path":"\/documentation\/sunday\/wwwformurlencoder\/boolencoding\/numeric","title":"case numeric","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sunday\/wwwformurlencoder\/boolencoding\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sunday\/wwwformurlencoder\/boolencoding\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/sunday\/wwwformurlencoder\/boolencoding","title":"WWWFormURLEncoder.BoolEncoding","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/sunday\/wwwformurlencoder\/dateencoding\/iso8601","title":"case iso8601","type":"case"},{"path":"\/documentation\/sunday\/wwwformurlencoder\/dateencoding\/millisecondssince1970","title":"case millisecondsSince1970","type":"case"},{"path":"\/documentation\/sunday\/wwwformurlencoder\/dateencoding\/secondssince1970","title":"case secondsSince1970","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sunday\/wwwformurlencoder\/dateencoding\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sunday\/wwwformurlencoder\/dateencoding\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/sunday\/wwwformurlencoder\/dateencoding","title":"WWWFormURLEncoder.DateEncoding","type":"enum"}],"path":"\/documentation\/sunday\/wwwformurlencoder","title":"WWWFormURLEncoder","type":"struct"},{"title":"Variables","type":"groupMarker"},{"path":"\/documentation\/sunday\/uuidpathencoder","title":"let uuidPathEncoder: PathEncoder","type":"var"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/sunday\/xctassertthrowserror(_:_:_:_:_:)","title":"func XCTAssertThrowsError<T>(() async throws -> T, () -> String, StaticString, UInt, (Error) -> Void) async throws","type":"func"},{"path":"\/documentation\/sunday\/nilifyresponse(statuscodes:problemtypes:block:)","title":"func nilifyResponse<R>(statusCodes: [HTTP.StatusCode], problemTypes: [Problem.Type], block: () async throws -> R) async throws -> R?","type":"func"},{"path":"\/documentation\/sunday\/nilifyresponse(statuses:problemtypes:block:)","title":"func nilifyResponse<R>(statuses: [Int], problemTypes: [Problem.Type], block: () async throws -> R) async throws -> R?","type":"func"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sunday\/~=(_:_:)-4e98a","title":"func ~= (String, MediaType) -> Bool","type":"op"},{"path":"\/documentation\/sunday\/~=(_:_:)-5teb5","title":"func ~= (MediaType, MediaType) -> Bool","type":"op"},{"path":"\/documentation\/sunday\/~=(_:_:)-8ewdj","title":"func ~= (MediaType, String) -> Bool","type":"op"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/sunday\/parameters","title":"Parameters","type":"typealias"},{"path":"\/documentation\/sunday\/pathencoder","title":"PathEncoder","type":"typealias"},{"path":"\/documentation\/sunday\/pathencoders","title":"PathEncoders","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/sunday\/charsets\/determineencoding(of:default:)","title":"static func determineEncoding(of: MediaType, default: String.Encoding) throws -> String.Encoding","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/sunday\/charsets\/error\/invalidcharsetname","title":"case invalidCharSetName","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sunday\/charsets\/error\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sunday\/charsets\/error\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sunday\/charsets\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/sunday\/charsets\/error\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/sunday\/charsets\/error","title":"CharSets.Error","type":"enum"}],"path":"\/documentation\/sunday\/charsets","title":"CharSets","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/sunday\/patchop\/delete","title":"case delete","type":"case"},{"path":"\/documentation\/sunday\/patchop\/set(_:)","title":"case set(Value)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sunday\/patchop\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sunday\/patchop\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/sunday\/patchop\/get(deleted:)","title":"func get(deleted: () -> Value) -> Value","type":"method"},{"path":"\/documentation\/sunday\/patchop\/use(block:)","title":"func use(block: (Value?) throws -> Void) rethrows","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/sunday\/patchop\/merge(_:)","title":"static func merge<Value>(Value) -> PatchOp<Value>","type":"method"}],"path":"\/documentation\/sunday\/patchop\/anypatchop-implementations","title":"AnyPatchOp Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sunday\/patchop\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/sunday\/patchop\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sunday\/patchop\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sunday\/patchop\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/sunday\/patchop","title":"PatchOp","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/sunday\/requestencodingfailurereason\/nosupportedaccepttypes(_:)","title":"case noSupportedAcceptTypes([MediaType])","type":"case"},{"path":"\/documentation\/sunday\/requestencodingfailurereason\/nosupportedcontenttypes(_:)","title":"case noSupportedContentTypes([MediaType])","type":"case"},{"path":"\/documentation\/sunday\/requestencodingfailurereason\/serializationfailed(contenttype:error:)","title":"case serializationFailed(contentType: MediaType, error: Error?)","type":"case"},{"path":"\/documentation\/sunday\/requestencodingfailurereason\/unsupportedcontenttype(_:)","title":"case unsupportedContentType(MediaType)","type":"case"},{"path":"\/documentation\/sunday\/requestencodingfailurereason\/unsupportedheaderparametervalue(_:)","title":"case unsupportedHeaderParameterValue(Any)","type":"case"}],"path":"\/documentation\/sunday\/requestencodingfailurereason","title":"RequestEncodingFailureReason","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/sunday\/responsedecodingfailurereason\/deserializationfailed(contenttype:error:)","title":"case deserializationFailed(contentType: MediaType, error: Error?)","type":"case"},{"path":"\/documentation\/sunday\/responsedecodingfailurereason\/invalidcontenttype(_:)","title":"case invalidContentType(String)","type":"case"},{"path":"\/documentation\/sunday\/responsedecodingfailurereason\/missingvalue","title":"case missingValue","type":"case"},{"path":"\/documentation\/sunday\/responsedecodingfailurereason\/nodata","title":"case noData","type":"case"},{"path":"\/documentation\/sunday\/responsedecodingfailurereason\/unsupportedcontenttype(_:)","title":"case unsupportedContentType(MediaType)","type":"case"}],"path":"\/documentation\/sunday\/responsedecodingfailurereason","title":"ResponseDecodingFailureReason","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/sunday\/responsevalidationfailurereason\/unacceptablestatuscode(response:data:)","title":"case unacceptableStatusCode(response: HTTPURLResponse, data: Data?)","type":"case"}],"path":"\/documentation\/sunday\/responsevalidationfailurereason","title":"ResponseValidationFailureReason","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/sunday\/servertrustpolicy\/customevaluation(_:)","title":"case customEvaluation((SecTrust, String) -> Bool)","type":"case"},{"path":"\/documentation\/sunday\/servertrustpolicy\/disableevaluation","title":"case disableEvaluation","type":"case"},{"path":"\/documentation\/sunday\/servertrustpolicy\/performdefaultevaluation(validatehost:)","title":"case performDefaultEvaluation(validateHost: Bool)","type":"case"},{"path":"\/documentation\/sunday\/servertrustpolicy\/performrevokedevaluation(validatehost:revocationflags:)","title":"case performRevokedEvaluation(validateHost: Bool, revocationFlags: CFOptionFlags)","type":"case"},{"path":"\/documentation\/sunday\/servertrustpolicy\/pincertificates(certificates:validatecertificatechain:validatehost:)","title":"case pinCertificates(certificates: [SecCertificate], validateCertificateChain: Bool, validateHost: Bool)","type":"case"},{"path":"\/documentation\/sunday\/servertrustpolicy\/pinpublickeys(publickeys:validatecertificatechain:validatehost:)","title":"case pinPublicKeys(publicKeys: [SecKey], validateCertificateChain: Bool, validateHost: Bool)","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sunday\/servertrustpolicy\/evaluate(_:forhost:)","title":"func evaluate(SecTrust, forHost: String) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/sunday\/servertrustpolicy\/certificates(in:)","title":"static func certificates(in: Bundle) -> [SecCertificate]","type":"method"},{"path":"\/documentation\/sunday\/servertrustpolicy\/publickeys(in:)","title":"static func publicKeys(in: Bundle) -> [SecKey]","type":"method"}],"path":"\/documentation\/sunday\/servertrustpolicy","title":"ServerTrustPolicy","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/sunday\/sundayerror\/invalidhttpresponse","title":"case invalidHTTPResponse","type":"case"},{"path":"\/documentation\/sunday\/sundayerror\/invalidurl(_:)","title":"case invalidURL(URLComponents?)","type":"case"},{"path":"\/documentation\/sunday\/sundayerror\/pathparameterencodingfailed(parameter:reason:)","title":"case pathParameterEncodingFailed(parameter: String, reason: Error?)","type":"case"},{"path":"\/documentation\/sunday\/sundayerror\/requestencodingfailed(reason:)","title":"case requestEncodingFailed(reason: RequestEncodingFailureReason)","type":"case"},{"path":"\/documentation\/sunday\/sundayerror\/responsedecodingfailed(reason:)","title":"case responseDecodingFailed(reason: ResponseDecodingFailureReason)","type":"case"},{"path":"\/documentation\/sunday\/sundayerror\/responsevalidationfailed(reason:)","title":"case responseValidationFailed(reason: ResponseValidationFailureReason)","type":"case"},{"path":"\/documentation\/sunday\/sundayerror\/unexpectedemptyresponse","title":"case unexpectedEmptyResponse","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sunday\/sundayerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/sunday\/sundayerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/sunday\/sundayerror","title":"SundayError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/sunday\/updateop\/set(_:)","title":"case set(Value)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/sunday\/updateop\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/sunday\/updateop\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/sunday\/updateop\/get()","title":"func get() -> Value","type":"method"},{"path":"\/documentation\/sunday\/updateop\/use(block:)","title":"func use(block: (Value) throws -> Void) rethrows","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/sunday\/updateop\/merge(_:)","title":"static func merge<Value>(Value) -> UpdateOp<Value>","type":"method"}],"path":"\/documentation\/sunday\/updateop\/anypatchop-implementations","title":"AnyPatchOp Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/sunday\/updateop\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/sunday\/updateop\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/sunday\/updateop\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/sunday\/updateop\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/sunday\/updateop","title":"UpdateOp","type":"enum"}],"path":"\/documentation\/sunday","title":"Sunday","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}